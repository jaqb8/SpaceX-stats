{"version":3,"sources":["logo.png","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","index.js"],"names":["module","exports","LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","console","launches","map","key","LAUNCH_QUERY","Launch","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3408a2af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ab10d000.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LaunchItem = ({\r\n  launch: { flight_number, mission_name, launch_date_local, launch_success }\r\n}) => {\r\n  return (\r\n    <div className='card card-body mb-3'>\r\n      <div className='row'>\r\n        <div className='col-md-9'>\r\n          <h4>\r\n            Mission:{' '}\r\n            <span\r\n              className={classNames({\r\n                'text-success': launch_success,\r\n                'text-danger': !launch_success\r\n              })}\r\n            >\r\n              {mission_name}\r\n            </span>\r\n          </h4>\r\n          <p>\r\n            Date: <Moment format='YYYY/MM/DD HH:mm'>{launch_date_local}</Moment>\r\n          </p>\r\n        </div>\r\n        <div className='col-md-3'>\r\n          <Link to={`/launch/${flight_number}`} className='btn btn-secondary'>\r\n            Launch Details\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLaunchItem.propTypes = {\r\n  launch: PropTypes.object.isRequired\r\n};\r\n\r\nexport default LaunchItem;\r\n","import React from 'react';\r\n\r\nconst MissionKey = () => {\r\n  return (\r\n    <div className='my-3'>\r\n      <p>\r\n        <span className='px-3 mr-2 bg-success' /> = Success\r\n      </p>\r\n      <p>\r\n        <span className='px-3 mr-2 bg-danger' /> = Fail\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissionKey;\r\n","import React, { Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport LaunchItem from './LaunchItem';\r\nimport MissionKey from './MissionKey';\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n  query LaunchesQuery {\r\n    launches {\r\n      flight_number\r\n      mission_name\r\n      launch_date_local\r\n      launch_success\r\n    }\r\n  }\r\n`;\r\n\r\nconst Launches = () => {\r\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY);\r\n\r\n  if (loading) return <h1>Loading...</h1>;\r\n  if (error) console.error(error);\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='display-4 my-3'>Launches</h1>\r\n      <MissionKey />\r\n      <Fragment>\r\n        {data.launches.map(launch => (\r\n          <LaunchItem launch={launch} key={launch.flight_number} />\r\n        ))}\r\n      </Fragment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Launches;\r\n","import React, { Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\n\r\nconst LAUNCH_QUERY = gql`\r\n  query LaunchQuery($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_success\r\n      launch_date_local\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Launch = ({ match }) => {\r\n  let { flight_number } = match.params;\r\n  flight_number = parseInt(flight_number);\r\n\r\n  const { loading, error, data } = useQuery(LAUNCH_QUERY, {\r\n    variables: { flight_number }\r\n  });\r\n\r\n  if (loading) return <h4>Loading...</h4>;\r\n  if (error) console.error(error);\r\n\r\n  const {\r\n    launch_date_local,\r\n    launch_success,\r\n    launch_year,\r\n    mission_name,\r\n    rocket: { rocket_id, rocket_name, rocket_type }\r\n  } = data.launch;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <h1 className='display-4 my-3'>\r\n          <span className='text-dark'>Mission:</span> {mission_name}\r\n        </h1>\r\n        <h4 className='mb-3'>Launch Details</h4>\r\n        <ul className='list-group'>\r\n          <li className='list-group-item'>Flight Number: {flight_number}</li>\r\n          <li className='list-group-item'>Launch Year: {launch_year}</li>\r\n          <li className='list-group-item'>\r\n            Launch Date:{' '}\r\n            <Moment format='YYYY/MM/DD HH:mm'>{launch_date_local}</Moment>\r\n          </li>\r\n          <li className='list-group-item'>\r\n            Launch Successful:{' '}\r\n            <span\r\n              className={classNames({\r\n                'text-success': launch_success,\r\n                'text-danger': !launch_success\r\n              })}\r\n            >\r\n              {launch_success ? 'Yes' : 'No'}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <h4 className='my-3'>Rocket Details</h4>\r\n        <ul className='list-group'>\r\n          <li className='list-group-item'>Rocket ID: {rocket_id}</li>\r\n          <li className='list-group-item'>Rocket Name: {rocket_name}</li>\r\n          <li className='list-group-item'>Rocket Type: {rocket_type}</li>\r\n        </ul>\r\n        <hr />\r\n        <Link to='/' className='btn btn-secondary'>\r\n          Back\r\n        </Link>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Launch;\r\n","import React from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport './App.css';\nimport logo from './logo.png';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className='container'>\n          <img\n            src={logo}\n            alt='SpaceX'\n            style={{ width: 300, display: 'block', margin: 'auto' }}\n          />\n          <Route exact path='/' component={Launches} />\n          <Route exact path='/launch/:flight_number' component={Launch} />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}